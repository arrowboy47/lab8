coord_polar() +
theme_void()
mpg |>
ggplot(aes(x=displ,y=hwy, fill = year))+
geom_mark_hull()+
geom_jitter(show.legend = FALSE, size = 1.5) +
geom_point(data=mpg %>%
filter(hwy > 22),
pch = 24,
size=4,
colour = "yellow",show.legend = FALSE) +
coord_polar() +
theme_void()
mpg |>
ggplot(aes(x=displ,y=hwy, fill = year))+
geom_mark_hull()+
geom_point()+
coord_fixed()+
scale_fill_viridis_d(option = 'B')+
theme_void()
mpg |>
ggplot(aes(x=displ,y=hwy, fill = year))+
geom_mark_hull()+
geom_point()+
coord_fixed()+
scale_fill_viridis_d(option = 'B')+
theme_void()
mpg |>
ggplot(aes(x=displ,y=hwy, fill = manufacturer))+
geom_mark_hull()+
geom_point()+
coord_fixed()+
scale_fill_viridis_d(option = 'B')+
theme_void()
mpg |>
ggplot(aes(x=displ,y=hwy, fill = manufacturer))+
geom_mark_hull()+
geom_point()+
coord_fixed()+
scale_fill_viridis_d(option = 'B')+
theme_void()
library(aRtsy)
install.packages('aRtsy')
install.packages('kkn')
install.packages('kknn')
install.packages('igraph')
install.packages('igraph')
mpg |>
ggplot(aes(x=displ, y=hwy, color = as.factor(year))) +
geom_point(show.legend = FALSE, size = 4) +
geom_encircle(aes(group = as.factor(year)), color = "black", size = 1, expand = 0.05) +
theme_void()
# Define a function to generate random polygons
generate_random_polygon <- function(id, n_points) {
data.frame(
id = id,
x = cos(seq(0, 2*pi, length.out = n_points)) + rnorm(n_points, sd = 0.1),
y = sin(seq(0, 2*pi, length.out = n_points)) + rnorm(n_points, sd = 0.1)
)
}
# Generate a dataset of 10 random polygons
polygons <- bind_rows(lapply(1:10, generate_random_polygon, n_points = 30))
# Generate a color for each polygon
polygons <- polygons %>%
group_by(id) %>%
mutate(color = sample(rainbow(10), 1))
# Plot the polygons
ggplot(polygons, aes(x = x, y = y, group = id, fill = color)) +
geom_polygon(alpha = 0.7) +
theme_void() +
coord_fixed()
# Plot the polygons
ggplot(polygons, aes(x = x, y = y, group = id, fill = my_pal)) +
geom_polygon(alpha = 0.7) +
theme_void() +
coord_fixed()
# Plot the polygons
ggplot(polygons, aes(x = x, y = y, group = id, fill = my_palette)) +
geom_polygon(alpha = 0.7) +
theme_void() +
coord_fixed()
color
# Plot the polygons
ggplot(polygons, aes(x = x, y = y, group = id, fill = color)) +
geom_polygon(alpha = 0.7) +
theme_void() +
coord_fixed()
# Generate a color for each polygon
polygons <- polygons %>%
group_by(id) %>%
mutate(color = my_palette)
# Generate a color for each polygon
polygons <- polygons %>%
group_by(id) %>%
mutate(color = magma(121))
# Generate a color for each polygon
polygons <- polygons %>%
group_by(id) %>%
mutate(color = magma(30))
# Plot the polygons
ggplot(polygons, aes(x = x, y = y, group = id, fill = color)) +
geom_polygon(alpha = 0.7, ) +
theme_void() +
coord_fixed()
# Plot the polygons
ggplot(polygons, aes(x = x, y = y, group = id, fill = color)) +
geom_polygon(alpha = 0.7, show.legend = FALSE) +
theme_void() +
coord_fixed()
# Generate a dataset of 10 random polygons
polygons <- bind_rows(lapply(1:10, generate_random_polygon, n_points = 30))
# Generate a color for each polygon
polygons <- polygons %>%
group_by(id) %>%
mutate(color = sample(rainbow(10), 1))
# Plot the polygons
ggplot(polygons, aes(x = x, y = y, group = id, fill = color)) +
geom_polygon(alpha = 0.7, show.legend = FALSE) +
theme_void() +
coord_fixed()
View(polygons)
# Plot the polygons
p<-ggplot(polygons, aes(x = x, y = y, group = id, fill = color)) +
geom_polygon(alpha = 0.7, show.legend = FALSE) +
theme_void() +
coord_fixed()
p + mpg |>
ggplot(aes(x=displ, y=hwy, color = as.factor(year))) +
geom_point(show.legend = FALSE, size = 4) +
geom_encircle(aes(group = as.factor(year)), color = "black", size = 1, expand = 0.05) +
theme_void()
use_seed(1) %>%
scene_bubbles(n = 5,
grain = 20) |>
unfold_warp(iterations = 10) %>%
unfold_loop(points = 10,
radius = .05) %>%
style_ribbon(palette = palette_manual(my_palette), background = "black")
use_seed(1) %>%
scene_bubbles(n = 5,
grain = 20) |>
unfold_warp(iterations = 10) %>%
unfold_loop(points = 10,
radius = .05) %>%
style_ribbon(palette = palette_manual(my_palette), background = "black")
c <- magma(121)
mpg |>
ggplot(aes(x=displ,y=hwy, fill = manufacturer))+
geom_jitter(show.legend = FALSE, size = 1.5) +
geom_point(data=mpg %>%
filter(hwy > 22),
pch = 24,
size=4,
colour = "yellow",show.legend = FALSE) +
coord_polar() +
theme_void()
p +mpg |>
ggplot(aes(x=displ,y=hwy, fill = manufacturer))+
geom_jitter(show.legend = FALSE, size = 1.5) +
geom_point(data=mpg %>%
filter(hwy > 22),
pch = 24,
size=4,
colour = "yellow",show.legend = FALSE) +
coord_polar() +
theme_void()
p + mpg |>
ggplot(aes(x=displ,y=hwy, fill = manufacturer))+
geom_jitter(show.legend = FALSE, size = 1.5) +
geom_point(data=mpg %>%
filter(hwy > 22),
pch = 24,
size=4,
colour = "yellow",show.legend = FALSE) +
coord_polar() +
theme_void()
p2 <- mpg |>
ggplot(aes(x=displ,y=hwy, fill = manufacturer))+
geom_jitter(show.legend = FALSE, size = 1.5) +
geom_point(data=mpg %>%
filter(hwy > 22),
pch = 24,
size=4,
colour = "yellow",show.legend = FALSE) +
coord_polar() +
theme_void()
p2 <- mpg |>
ggplot(aes(x=displ,y=hwy, fill = manufacturer))+
geom_jitter(show.legend = FALSE, size = 1.5) +
geom_point(data=mpg %>%
filter(hwy > 22),
pch = 24,
size=4,
colour = "yellow",show.legend = FALSE) +
coord_polar() +
theme_void()
p2
# Define a function to generate random polygons
generate_random_polygon <- function(id, n_points) {
data.frame(
id = id,
x = cos(seq(0, 2*pi, length.out = n_points)) + rnorm(n_points, sd = 0.1),
y = sin(seq(0, 2*pi, length.out = n_points)) + rnorm(n_points, sd = 0.1)
)
}
# Generate a dataset of 10 random polygons
polygons <- bind_rows(lapply(1:10, generate_random_polygon, n_points = 30))
# Generate a color for each polygon
polygons <- polygons %>%
group_by(id) %>%
mutate(color = sample(rainbow(10), 1))
# Plot the polygons
p<-ggplot(polygons, aes(x = x, y = y, group = id, fill = color)) +
geom_polygon(alpha = 0.7, show.legend = FALSE) +
theme_void() +
coord_fixed()
grob <- ggplotGrob(p)
# Add the grob as an annotation to the other plot
combined_plot <- p2 +
annotation_custom(grob, xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf)
combined_plot
# Add the grob as an annotation to the other plot
combined_plot <- p2 +
annotation_custom(grob, xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf)
combined_plot
p + p2
p2 <- mpg |>
ggplot(aes(x=displ,y=hwy, fill = manufacturer))+
geom_jitter(show.legend = FALSE, size = 1.5) +
geom_point(data=mpg %>%
filter(hwy > 22),
pch = 24,
size=4,
colour = "yellow",show.legend = FALSE) +
theme_void()
# Define a function to generate random polygons
generate_random_polygon <- function(id, n_points) {
data.frame(
id = id,
x = cos(seq(0, 2*pi, length.out = n_points)) + rnorm(n_points, sd = 0.1),
y = sin(seq(0, 2*pi, length.out = n_points)) + rnorm(n_points, sd = 0.1)
)
}
# Generate a dataset of 10 random polygons
polygons <- bind_rows(lapply(1:10, generate_random_polygon, n_points = 30))
# Generate a color for each polygon
polygons <- polygons %>%
group_by(id) %>%
mutate(color = sample(rainbow(10), 1))
# Plot the polygons
p<-ggplot(polygons, aes(x = x, y = y, group = id, fill = color)) +
geom_polygon(alpha = 0.7, show.legend = FALSE) +
theme_void() +
coord_fixed()
p + p2
grob <- ggplotGrob(p)
# Add the grob as an annotation to the other plot
combined_plot <- p2 +
annotation_custom(grob, xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf)
combined_plot
grob <- ggplotGrob(p2)
# Add the grob as an annotation to the other plot
combined_plot <- p +
annotation_custom(grob, xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf)
combined_plot
#plot #1
p2 <- mpg |>
ggplot(aes(x=displ,y=hwy, fill = manufacturer))+
geom_jitter(show.legend = FALSE, size = 1.5) +
geom_point(data=mpg %>%
filter(hwy > 22),
pch = 24,
size=4,
colour = "yellow",show.legend = FALSE) +
theme_void()
# plot number 2
# Define a function to generate random polygons
generate_random_polygon <- function(id, n_points) {
data.frame(
id = id,
x = cos(seq(0, 2*pi, length.out = n_points)) + rnorm(n_points, sd = 0.1),
y = sin(seq(0, 2*pi, length.out = n_points)) + rnorm(n_points, sd = 0.1)
)
}
# Generate a dataset of 10 random polygons
polygons <- bind_rows(lapply(1:10, generate_random_polygon, n_points = 30))
# Generate a color for each polygon
polygons <- polygons %>%
group_by(id) %>%
mutate(color = sample(rainbow(10), 1))
# Plot the polygons
p<-ggplot(polygons, aes(x = x, y = y, group = id, fill = color)) +
geom_polygon(alpha = 0.7, show.legend = FALSE) +
theme_void() +
coord_fixed()
# combine the plots
grob <- ggplotGrob(p2)
combined_plot <- p +
annotation_custom(grob, xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf)
combined_plot
combined_plot
library(tidyverse)
library(jasmines)
library(ggforce)
my_palette <- c('#d072a6','#ac84b2','#8795bd','#3db7d3','#6ac5c6','#97d3b8','#ffb18a','#f99586','#f27981')
use_seed(1) |>
scene_bubbles(n = 5,
grain = 20) |>
unfold_warp(iterations = 10) |>
unfold_loop(points = 10,
radius = .05) |>
style_ribbon(palette = palette_manual(my_palette), background = "black")
# plot number 2
# Define a function to generate random polygons
generate_random_polygon <- function(id, n_points) {
data.frame(
id = id,
x = cos(seq(0, 2*pi, length.out = n_points)) + rnorm(n_points, sd = 0.1),
y = sin(seq(0, 2*pi, length.out = n_points)) + rnorm(n_points, sd = 0.1)
)
}
# Generate a dataset of 10 random polygons
polygons <- bind_rows(lapply(1:10, generate_random_polygon, n_points = 30))
# Generate a color for each polygon
polygons <- polygons %>%
group_by(id) %>%
mutate(color = sample(rainbow(10), 1))
# Plot the polygons
p<-ggplot(polygons, aes(x = x, y = y, group = id, fill = color)) +
geom_polygon(alpha = 0.7, show.legend = FALSE) +
theme_void() +
coord_fixed()
# combine the plots
grob <- ggplotGrob(p2)
combined_plot <- p +
annotation_custom(grob, xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf)
combined_plot
# plot number 2
# Define a function to generate random polygons
generate_random_polygon <- function(id, n_points) {
data.frame(
id = id,
x = cos(seq(0, 2*pi, length.out = n_points)) + rnorm(n_points, sd = 0.1),
y = sin(seq(0, 2*pi, length.out = n_points)) + rnorm(n_points, sd = 0.1)
)
}
# Generate a dataset of 10 random polygons
polygons <- bind_rows(lapply(1:10, generate_random_polygon, n_points = 30))
# Generate a color for each polygon
polygons <- polygons %>%
group_by(id) %>%
mutate(color = sample(rainbow(10), 1))
# Plot the polygons
p<-ggplot(polygons, aes(x = x, y = y, group = id, fill = color)) +
geom_polygon(alpha = 0.7, show.legend = FALSE) +
theme_void() +
coord_fixed()
# combine the plots
grob <- ggplotGrob(p2)
combined_plot <- p +
annotation_custom(grob, xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf)
combined_plot
# plot number 2
# Define a function to generate random polygons
generate_random_polygon <- function(id, n_points) {
data.frame(
id = id,
x = cos(seq(0, 2*pi, length.out = n_points)) + rnorm(n_points, sd = 0.1),
y = sin(seq(0, 2*pi, length.out = n_points)) + rnorm(n_points, sd = 0.1)
)
}
# Generate a dataset of 10 random polygons
polygons <- bind_rows(lapply(1:10, generate_random_polygon, n_points = 30))
# Generate a color for each polygon
polygons <- polygons %>%
group_by(id) %>%
mutate(color = sample(rainbow(10), 1))
# Plot the polygons
p<-ggplot(polygons, aes(x = x, y = y, group = id, fill = color)) +
geom_polygon(alpha = 0.7, show.legend = FALSE) +
theme_void() +
coord_fixed()
# combine the plots
grob <- ggplotGrob(p2)
combined_plot <- p +
annotation_custom(grob, xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf)
combined_plot
#plot #1
p2 <- mpg |>
ggplot(aes(x=displ,y=hwy, fill = manufacturer))+
geom_jitter(show.legend = FALSE, size = 1.5) +
geom_point(data=mpg %>%
filter(hwy > 22),
pch = 24,
size=4,
colour = "yellow",show.legend = FALSE) +
theme_void()
# plot number 2
# Define a function to generate random polygons
generate_random_polygon <- function(id, n_points) {
data.frame(
id = id,
x = cos(seq(0, 2*pi, length.out = n_points)) + rnorm(n_points, sd = 0.1),
y = sin(seq(0, 2*pi, length.out = n_points)) + rnorm(n_points, sd = 0.1)
)
}
# Generate a dataset of 10 random polygons
polygons <- bind_rows(lapply(1:10, generate_random_polygon, n_points = 30))
# Generate a color for each polygon
polygons <- polygons %>%
group_by(id) %>%
mutate(color = sample(rainbow(10), 1))
# Plot the polygons
p<-ggplot(polygons, aes(x = x, y = y, group = id, fill = color)) +
geom_polygon(alpha = 0.7, show.legend = FALSE) +
theme_void() +
coord_fixed()
# combine the plots
grob <- ggplotGrob(p2)
combined_plot <- p +
annotation_custom(grob, xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf)
combined_plot
?geom_jitter
?shape
View(polygons)
View(polygons)
?geom_polygon
?ggplotGrob
?annotation_custom
my_palette <- c('#d072a6','#ac84b2','#8795bd','#3db7d3','#6ac5c6','#97d3b8','#ffb18a','#f99586','#f27981')
use_seed(1) |>
scene_bubbles(n = 5,
grain = 20) |>
unfold_warp(iterations = 10) |>
unfold_loop(points = 10,
radius = .05) |>
style_ribbon(palette = palette_manual(my_palette), background = "black")
my_palette <- c('#d072a6','#ac84b2','#8795bd','#3db7d3','#6ac5c6','#97d3b8','#ffb18a','#f99586','#f27981')
use_seed(1) |>
scene_bubbles(n = 5,
grain = 20) |>
unfold_warp(iterations = 10) |>
unfold_loop(points = 10,
radius = .05) |>
style_ribbon(palette = palette_manual(my_palette), background = "black")
my_palette <- c('#d072a6','#ac84b2','#8795bd','#3db7d3','#6ac5c6','#97d3b8','#ffb18a','#f99586','#f27981')
use_seed(1) |>
scene_bubbles(n = 5,
grain = 20) |>
unfold_warp(iterations = 10) |>
unfold_loop(points = 10,
radius = .05) |>
style_ribbon(palette = palette_manual(my_palette), background = "black")
my_palette <- c('#d072a6','#ac84b2','#8795bd','#3db7d3','#6ac5c6','#97d3b8','#ffb18a','#f99586','#f27981')
use_seed(1) |>
scene_bubbles(n = 5,
grain = 20) |>
unfold_warp(iterations = 10) |>
unfold_loop(points = 10,
radius = .05) |>
style_ribbon(palette = palette_manual(my_palette), background = "black")
my_palette <- c('#d072a6','#ac84b2','#8795bd','#3db7d3','#6ac5c6','#97d3b8','#ffb18a','#f99586','#f27981')
use_seed(1) |>
scene_bubbles(n = 5,
grain = 20) |>
unfold_warp(iterations = 10) |>
unfold_loop(points = 10,
radius = .05) |>
style_ribbon(palette = palette_manual(my_palette), background = "black")
my_palette <- c('#d072a6','#ac84b2','#8795bd','#3db7d3','#6ac5c6','#97d3b8','#ffb18a','#f99586','#f27981')
use_seed(1) |>
scene_bubbles(n = 5,
grain = 20) |>
unfold_warp(iterations = 10) |>
unfold_loop(points = 10,
radius = .05) |>
style_ribbon(palette = palette_manual(my_palette), background = "black")
#plot #1
p2 <- mpg |>
ggplot(aes(x=displ,y=hwy, fill = manufacturer))+
geom_jitter(show.legend = FALSE, size = 1.5) +
geom_point(data=mpg %>%
filter(hwy > 22),
pch = 24,
size=4,
colour = "yellow",show.legend = FALSE) +
theme_void()
# plot number 2
# Define a function to generate random polygons
generate_random_polygon <- function(id, n_points) {
data.frame(
id = id,
x = cos(seq(0, 2*pi, length.out = n_points)) + rnorm(n_points, sd = 0.1),
y = sin(seq(0, 2*pi, length.out = n_points)) + rnorm(n_points, sd = 0.1)
)
}
# Generate a dataset of 10 random polygons
polygons <- bind_rows(lapply(1:10, generate_random_polygon, n_points = 30))
# Generate a color for each polygon
polygons <- polygons %>%
group_by(id) %>%
mutate(color = sample(rainbow(10), 1))
# Plot the polygons
p<-ggplot(polygons, aes(x = x, y = y, group = id, fill = color)) +
geom_polygon(alpha = 0.7, show.legend = FALSE) +
theme_void() +
coord_fixed()
# combine the plots
grob <- ggplotGrob(p2)
combined_plot <- p +
annotation_custom(grob, xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf)
combined_plot
